"use strict";(self.webpackChunkngx_form_object=self.webpackChunkngx_form_object||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":"unreleased","badge":true,"noIndex":false,"className":"docs-version-current","isLast":false,"docsSidebars":{"mainSidebar":[{"type":"category","label":"Getting started","items":[{"type":"link","label":"Introduction","href":"/ngx-form-object/docs/next/","docId":"getting-started/introduction"},{"type":"link","label":"Installation","href":"/ngx-form-object/docs/next/getting-started/installation","docId":"getting-started/installation"},{"type":"link","label":"Basic usage","href":"/ngx-form-object/docs/next/getting-started/basic-usage","docId":"getting-started/basic-usage"}],"collapsed":true,"collapsible":true},{"type":"category","label":"API reference","items":[{"type":"link","label":"FormObject","href":"/ngx-form-object/docs/next/api-reference/form-object","docId":"api-reference/form-object"},{"type":"link","label":"Decorators","href":"/ngx-form-object/docs/next/api-reference/decorators","docId":"api-reference/decorators"},{"type":"category","label":"Extended form controls","items":[{"type":"link","label":"ExtendedFormControl","href":"/ngx-form-object/docs/next/api-reference/extended-form-controls/extended-form-control","docId":"api-reference/extended-form-controls/extended-form-control"},{"type":"link","label":"ExtendedFormArray","href":"/ngx-form-object/docs/next/api-reference/extended-form-controls/extended-form-array","docId":"api-reference/extended-form-controls/extended-form-array"},{"type":"link","label":"FormStore","href":"/ngx-form-object/docs/next/api-reference/extended-form-controls/form-store","docId":"api-reference/extended-form-controls/form-store"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Guides","items":[{"type":"link","label":"Base form object","href":"/ngx-form-object/docs/next/guides/base-form-object","docId":"guides/base-form-object"},{"type":"link","label":"Creating complex forms","href":"/ngx-form-object/docs/next/guides/creating-complex-forms","docId":"guides/creating-complex-forms"},{"type":"link","label":"Defining relationship form fields","href":"/ngx-form-object/docs/next/guides/defining-relationship-form-fields","docId":"guides/defining-relationship-form-fields"},{"type":"link","label":"Saving forms","href":"/ngx-form-object/docs/next/guides/saving-forms","docId":"guides/saving-forms"},{"type":"link","label":"Validating forms","href":"/ngx-form-object/docs/next/guides/validating-forms","docId":"guides/validating-forms"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Migration guide","href":"/ngx-form-object/docs/next/migration-guide","docId":"migration-guide"}]},"docs":{"api-reference/decorators":{"id":"api-reference/decorators","title":"Decorators","description":"Model decorators","sidebar":"mainSidebar"},"api-reference/extended-form-controls/extended-form-array":{"id":"api-reference/extended-form-controls/extended-form-array","title":"ExtendedFormArray","description":"ExtendedFormArray extends FormArray. Tracks the value and validity state of its elements - FormControl, FormGroup, FormStore or FormArray instances.","sidebar":"mainSidebar"},"api-reference/extended-form-controls/extended-form-control":{"id":"api-reference/extended-form-controls/extended-form-control","title":"ExtendedFormControl","description":"ExtendedFormControl extends FormControl. Tracks the value and validation status of an individual form control.","sidebar":"mainSidebar"},"api-reference/extended-form-controls/form-store":{"id":"api-reference/extended-form-controls/form-store","title":"FormStore","description":"FormStore extends FormGroup. Tracks the value and validity state of a group of AbstractControl instances.","sidebar":"mainSidebar"},"api-reference/form-object":{"id":"api-reference/form-object","title":"FormObject","description":"FormObject provides a way to specify how its relationship controls will be created.","sidebar":"mainSidebar"},"getting-started/basic-usage":{"id":"getting-started/basic-usage","title":"Basic usage","description":"1. Create a model","sidebar":"mainSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"Install package","sidebar":"mainSidebar"},"getting-started/introduction":{"id":"getting-started/introduction","title":"Introduction","description":"What is ngx-form-object?","sidebar":"mainSidebar"},"guides/base-form-object":{"id":"guides/base-form-object","title":"Base form object","description":"Base form object is just an abstraction on top of our other form objects. All other form object will extend base form object. Base form object is optional but it is highly recommended as it simplifies the code by giving us the ability to specify data which can be accessed from all other form objects.","sidebar":"mainSidebar"},"guides/creating-complex-forms":{"id":"guides/creating-complex-forms","title":"Creating complex forms","description":"ngx-form-object exposes two methods for modifying form creation. Both can be used for creating complex relationship structures.","sidebar":"mainSidebar"},"guides/defining-relationship-form-fields":{"id":"guides/defining-relationship-form-fields","title":"Defining relationship form fields","description":"When creating a form, there is a default behaviour for every type of form field relationship:","sidebar":"mainSidebar"},"guides/saving-forms":{"id":"guides/saving-forms","title":"Saving forms","description":"Saving process is initiated by calling save method on a FormStore - userFormStore.save().","sidebar":"mainSidebar"},"guides/validating-forms":{"id":"guides/validating-forms","title":"Validating forms","description":"Defining relationship validators","sidebar":"mainSidebar"},"migration-guide":{"id":"migration-guide","title":"Migration guide","description":"Migration from v8.x.x to v9.x.x","sidebar":"mainSidebar"}}}')}}]);