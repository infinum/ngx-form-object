"use strict";(self.webpackChunkngx_form_object=self.webpackChunkngx_form_object||[]).push([[435],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),s=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(r),u=n,f=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return r?o.createElement(f,i(i({ref:t},c),{},{components:r})):o.createElement(f,i({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:n,i[1]=p;for(var s=2;s<a;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8986:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var o=r(7462),n=(r(7294),r(3905));const a={id:"decorators",title:"Decorators",sidebar_label:"Decorators"},i=void 0,p={unversionedId:"api-reference/decorators",id:"api-reference/decorators",title:"Decorators",description:"Model decorators",source:"@site/docs/api-reference/decorators.md",sourceDirName:"api-reference",slug:"/api-reference/decorators",permalink:"/ngx-form-object/docs/next/api-reference/decorators",draft:!1,tags:[],version:"current",frontMatter:{id:"decorators",title:"Decorators",sidebar_label:"Decorators"},sidebar:"mainSidebar",previous:{title:"FormObject",permalink:"/ngx-form-object/docs/next/api-reference/form-object"},next:{title:"ExtendedFormControl",permalink:"/ngx-form-object/docs/next/api-reference/extended-form-controls/extended-form-control"}},l={},s=[{value:"Model decorators",id:"model-decorators",level:2},{value:"@Attribute()",id:"attribute",level:3},{value:"@BelongsTo(options: PropertyOptions)",id:"belongstooptions-propertyoptions",level:3},{value:"@HasMany(options: PropertyOptions)",id:"hasmanyoptions-propertyoptions",level:3},{value:"PropertyOptions",id:"propertyoptions",level:3},{value:"Method decorators",id:"method-decorators",level:2},{value:"@BuildControl(propertyName: string)",id:"buildcontrolpropertyname-string",level:3},{value:"@BuildRelationshipFormObject(propertyName: string)",id:"buildrelationshipformobjectpropertyname-string",level:3}],c={toc:s};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"model-decorators"},"Model decorators"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"ngx-form-object")," exposes three model decorators: ",(0,n.kt)("inlineCode",{parentName:"p"},"Attribute()"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"BelongsTo()"),", and ",(0,n.kt)("inlineCode",{parentName:"p"},"HasMany()"),".\nThese decorators are used for specifying what kind of form controls should be created for different model properties."),(0,n.kt)("h3",{id:"attribute"},"@Attribute()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"ExtendedFormControl"),"s will be created for model properties decorated with the ",(0,n.kt)("inlineCode",{parentName:"p"},"Attribute(options: PropertyOptions)")," decorator. See ",(0,n.kt)("a",{parentName:"p",href:"#propertyoptions"},"PropertyOptions")," for more information about the decorator options"),(0,n.kt)("h3",{id:"belongstooptions-propertyoptions"},"@BelongsTo(options: PropertyOptions)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"ExtendedFormControl"),"s will be created for model properties decorated with the ",(0,n.kt)("inlineCode",{parentName:"p"},"BelongsTo(options: PropertyOptions)")," decorator. See ",(0,n.kt)("a",{parentName:"p",href:"#propertyoptions"},"PropertyOptions")," for more information about the decorator options"),(0,n.kt)("h3",{id:"hasmanyoptions-propertyoptions"},"@HasMany(options: PropertyOptions)"),(0,n.kt)("p",null,"Empty ",(0,n.kt)("inlineCode",{parentName:"p"},"ExtendedFormArray")," will be created for model properties decorated with the ",(0,n.kt)("inlineCode",{parentName:"p"},"HasMany(options: PropertyOptions)")," decorator. See ",(0,n.kt)("a",{parentName:"p",href:"#propertyoptions"},"PropertyOptions")," for more information about the decorator options"),(0,n.kt)("h3",{id:"propertyoptions"},"PropertyOptions"),(0,n.kt)("p",null,"Each of the decorators accepts a ",(0,n.kt)("inlineCode",{parentName:"p"},"PropertyOptions")," optional argument."),(0,n.kt)("p",null,"A custom ",(0,n.kt)("inlineCode",{parentName:"p"},"isChanged(initialValue: any, currentValue: any): boolean")," function can be defined in the options argument. If defined, this function overrides the default ",(0,n.kt)("inlineCode",{parentName:"p"},"isChanged")," behavior for that attribute."),(0,n.kt)("p",null,"You can override default control types in ",(0,n.kt)("a",{parentName:"p",href:"/ngx-form-object/docs/next/api-reference/form-object"},"FormObject"),"."),(0,n.kt)("h2",{id:"method-decorators"},"Method decorators"),(0,n.kt)("h3",{id:"buildcontrolpropertyname-string"},"@BuildControl(propertyName: string)"),(0,n.kt)("p",null,"Requires relationship ",(0,n.kt)("inlineCode",{parentName:"p"},"propertyName")," as an argument which must be equal to the property name defined in the model. Can be used for creating custom relationship forms. ",(0,n.kt)("a",{parentName:"p",href:"/ngx-form-object/docs/next/guides/creating-complex-forms#creating-custom-relationship-forms"},"Find out more"),"."),(0,n.kt)("h3",{id:"buildrelationshipformobjectpropertyname-string"},"@BuildRelationshipFormObject(propertyName: string)"),(0,n.kt)("p",null,"Requires relationship ",(0,n.kt)("inlineCode",{parentName:"p"},"propertyName")," as an argument which must be equal to the property name defined in the model. Can be used for creating complex relationship structures. ",(0,n.kt)("a",{parentName:"p",href:"/ngx-form-object/docs/next/guides/creating-complex-forms#creating-complex-relationship-structures"},"Find out more"),"."))}d.isMDXComponent=!0}}]);