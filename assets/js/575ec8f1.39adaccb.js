"use strict";(self.webpackChunkngx_form_object=self.webpackChunkngx_form_object||[]).push([[682],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return u}});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var d=t.createContext({}),m=function(e){var n=t.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},s=function(e){var n=m(e.components);return t.createElement(d.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=m(r),u=i,c=p["".concat(d,".").concat(u)]||p[u]||f[u]||o;return r?t.createElement(c,a(a({ref:n},s),{},{components:r})):t.createElement(c,a({ref:n},s))}));function u(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=p;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var m=2;m<o;m++)a[m]=r[m];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},9619:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return l},metadata:function(){return d},toc:function(){return m},default:function(){return f}});var t=r(7462),i=r(3366),o=(r(7294),r(3905)),a=["components"],l={id:"defining-relationship-form-fields",title:"Defining relationship form fields",sidebar_label:"Defining relationship form fields"},d={unversionedId:"guides/defining-relationship-form-fields",id:"guides/defining-relationship-form-fields",isDocsHomePage:!1,title:"Defining relationship form fields",description:"When creating a form, there is a default behaviour for every type of form field relationship:",source:"@site/docs/guides/defining-relationship-form-fields.md",sourceDirName:"guides",slug:"/guides/defining-relationship-form-fields",permalink:"/ngx-form-object/docs/next/guides/defining-relationship-form-fields",version:"current",sidebar_label:"Defining relationship form fields",frontMatter:{id:"defining-relationship-form-fields",title:"Defining relationship form fields",sidebar_label:"Defining relationship form fields"},sidebar:"mainSidebar",previous:{title:"Creating complex forms",permalink:"/ngx-form-object/docs/next/guides/creating-complex-forms"},next:{title:"Saving forms",permalink:"/ngx-form-object/docs/next/guides/saving-forms"}},m=[{value:"Create relationship form fields using @BuildRelationshipFormObject decorator",id:"create-relationship-form-fields-using-buildrelationshipformobject-decorator",children:[]},{value:"Create form fields using build{FieldName} method",id:"create-form-fields-using-buildfieldname-method",children:[]}],s={toc:m};function f(e){var n=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"When creating a form, there is a default behaviour for every type of form field relationship:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Attribute")," form field - ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormControl")," will be created"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BelongsTo")," form field - ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormControl")," will be created"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"HasMany")," form field - An empty ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormArray")," will be created")),(0,o.kt)("p",null,"For example, for ",(0,o.kt)("inlineCode",{parentName:"p"},"User")," model:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="user.model.ts"',title:'"user.model.ts"'},"import { Attribute, HasMany } from 'ngx-form-object';\n\nclass User {\n  @Attribute()\n  name: string;\n\n  @BelongsTo()\n  address: Address;\n\n  @HasMany()\n  cars: Array<Car>;\n}\n")),(0,o.kt)("p",null,"By default form will be created with:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"name")," form field as ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormControl")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"address")," form field as ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormControl")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cars")," form field as ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormArray")," containing one ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormControl")," for every ",(0,o.kt)("inlineCode",{parentName:"li"},"Car")," model.")),(0,o.kt)("p",null,"If default form fields don't provide enough control (e.g. you are manipulating multiple levels of relationships on the same page/form), default behaviour can be overriden by implementing one of the following methods:"),(0,o.kt)("h3",{id:"create-relationship-form-fields-using-buildrelationshipformobject-decorator"},"Create relationship form fields using @BuildRelationshipFormObject decorator"),(0,o.kt)("p",null,"If defined, method decorated with ",(0,o.kt)("inlineCode",{parentName:"p"},"@BuildRelationshipFormObject")," decorator will be used when creating a form field for any model relationship decorated with ",(0,o.kt)("inlineCode",{parentName:"p"},"@BelongsTo")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"@HasMany")," decorators.\nThis method must return a ",(0,o.kt)("inlineCode",{parentName:"p"},"FormObject")," instance. ",(0,o.kt)("a",{parentName:"p",href:"/ngx-form-object/docs/next/guides/creating-complex-forms#creating-complex-relationship-structures"},"Find out more"),"."),(0,o.kt)("h3",{id:"create-form-fields-using-buildfieldname-method"},"Create form fields using build{FieldName} method"),(0,o.kt)("p",null,"If defined, this method will be used when building a form field for any model property or relationship decorated with ",(0,o.kt)("inlineCode",{parentName:"p"},"@Attribute"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"@BelongsTo")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"@HasMany")," decorators.\nThis method must have a name formatted like ",(0,o.kt)("inlineCode",{parentName:"p"},"build{propertyName}")," and return a ",(0,o.kt)("inlineCode",{parentName:"p"},"ExtendedFormControl"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ExtendedFormArray")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"FormStore")," instance. It receives property value as its argument. ",(0,o.kt)("a",{parentName:"p",href:"/ngx-form-object/docs/next/guides/creating-complex-forms#creating-custom-relationship-forms"},"Find out more"),"."))}f.isMDXComponent=!0}}]);