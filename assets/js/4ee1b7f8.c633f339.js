"use strict";(self.webpackChunkngx_form_object=self.webpackChunkngx_form_object||[]).push([[461],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},m=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=c(r),d=a,f=p["".concat(l,".").concat(d)]||p[d]||u[d]||o;return r?n.createElement(f,s(s({ref:t},m),{},{components:r})):n.createElement(f,s({ref:t},m))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4537:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={id:"basic-usage",title:"Basic usage",sidebar_label:"Basic usage"},s=void 0,i={unversionedId:"getting-started/basic-usage",id:"getting-started/basic-usage",title:"Basic usage",description:"1. Create a model",source:"@site/docs/getting-started/basic-usage.md",sourceDirName:"getting-started",slug:"/getting-started/basic-usage",permalink:"/ngx-form-object/docs/next/getting-started/basic-usage",draft:!1,tags:[],version:"current",frontMatter:{id:"basic-usage",title:"Basic usage",sidebar_label:"Basic usage"},sidebar:"mainSidebar",previous:{title:"Installation",permalink:"/ngx-form-object/docs/next/getting-started/installation"},next:{title:"FormObject",permalink:"/ngx-form-object/docs/next/api-reference/form-object"}},l={},c=[{value:"1. Create a model",id:"1-create-a-model",level:2},{value:"2. Create a form object class",id:"2-create-a-form-object-class",level:2},{value:"3. Create a form store (form)",id:"3-create-a-form-store-form",level:2},{value:"4. Map form store to the template",id:"4-map-form-store-to-the-template",level:2},{value:"5. Implement a saving functionality",id:"5-implement-a-saving-functionality",level:2}],m={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"1-create-a-model"},"1. Create a model"),(0,a.kt)("p",null,"The model will be used to populate the form."),(0,a.kt)("p",null,"The model must specify which properties are attribute properties (his own properties), which are belongsTo properties, and which properties are hasMany properties. For those puproses ",(0,a.kt)("inlineCode",{parentName:"p"},"@Attribute"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"@BelongsTo"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"@HasMany")," decorators are provided. ",(0,a.kt)("a",{parentName:"p",href:"../guides/defining-relationship-form-fields"},"Find out more"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="user.model.ts"',title:'"user.model.ts"'},"import { Attribute, BelongsTo, HasMany } from 'ngx-form-object';\n\nclass User {\n  @Attribute()\n  name: string;\n\n  @BelongsTo()\n  address: Address;\n\n  @HasMany()\n  cars: Array<Car>;\n}\n")),(0,a.kt)("h2",{id:"2-create-a-form-object-class"},"2. Create a form object class"),(0,a.kt)("p",null,"The task of a specific form object is to manage forms of a specific type."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="user.form-object.ts"',title:'"user.form-object.ts"'},"import { FormObject, FormObjectOptions } from 'ngx-form-object';\nimport { User } from './user.model';\n\nexport class UserFormObject extends FormObject<User> {\n  constructor(\n    public model: User,\n    protected options: FormObjectOptions\n  ) {\n    super(model, options);\n  }\n}\n")),(0,a.kt)("h2",{id:"3-create-a-form-store-form"},"3. Create a form store (form)"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"FormObject")," is created out of the model. Once created, the actual form can be accessed via ",(0,a.kt)("inlineCode",{parentName:"p"},"formObject.form")," getter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const user: User = new User();\nconst userFormObject: UserFormObject = new UserFormObject(user, null);\n\nconst userForm: FormStore<User> = userFormObject.form;\n")),(0,a.kt)("h2",{id:"4-map-form-store-to-the-template"},"4. Map form store to the template"),(0,a.kt)("p",null,"Import ",(0,a.kt)("inlineCode",{parentName:"p"},"ReactiveFormsModule")," to the parent module.\nForm store can be used in a template in the same way as any other form created by Angular's ",(0,a.kt)("inlineCode",{parentName:"p"},"FormBuilder"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<form [formGroup]="userForm">\n  <input formControlName="name" />\n</form>\n')),(0,a.kt)("h2",{id:"5-implement-a-saving-functionality"},"5. Implement a saving functionality"),(0,a.kt)("p",null,"To save the form (model), ",(0,a.kt)("inlineCode",{parentName:"p"},".save()")," on a ",(0,a.kt)("inlineCode",{parentName:"p"},"FormStore")," instance should be used."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"userForm.save();\n")),(0,a.kt)("p",null,"In the background, ",(0,a.kt)("inlineCode",{parentName:"p"},"beforeSave"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"save"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"afterSave")," hooks from FormObject are called. Out of those three, only the ",(0,a.kt)("inlineCode",{parentName:"p"},"save")," function is mandatory (unless the saving functionality is not used). See ",(0,a.kt)("a",{parentName:"p",href:"/ngx-form-object/docs/next/guides/saving-forms"},"saving guide")," for more details."))}p.isMDXComponent=!0}}]);