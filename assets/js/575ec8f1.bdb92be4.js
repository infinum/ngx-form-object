"use strict";(self.webpackChunkngx_form_object=self.webpackChunkngx_form_object||[]).push([[682],{3905:function(e,r,n){n.d(r,{Zo:function(){return f},kt:function(){return c}});var t=n(7294);function i(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){i(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,i=function(e,r){if(null==e)return{};var n,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(i[n]=e[n]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=t.createContext({}),s=function(e){var r=t.useContext(d),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},f=function(e){var r=s(e.components);return t.createElement(d.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),p=s(n),c=i,u=p["".concat(d,".").concat(c)]||p[c]||m[c]||o;return n?t.createElement(u,a(a({ref:r},f),{},{components:n})):t.createElement(u,a({ref:r},f))}));function c(e,r){var n=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=p;var l={};for(var d in r)hasOwnProperty.call(r,d)&&(l[d]=r[d]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9619:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return l},metadata:function(){return d},toc:function(){return s},default:function(){return m}});var t=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={id:"defining-relationship-form-fields",title:"Defining relationship form fields",sidebar_label:"Defining relationship form fields"},d={unversionedId:"guides/defining-relationship-form-fields",id:"guides/defining-relationship-form-fields",isDocsHomePage:!1,title:"Defining relationship form fields",description:"When creating a form, there is a default behaviour for every type of form field relationship:",source:"@site/docs/guides/defining-relationship-form-fields.md",sourceDirName:"guides",slug:"/guides/defining-relationship-form-fields",permalink:"/ngx-form-object/docs/next/guides/defining-relationship-form-fields",version:"current",sidebar_label:"Defining relationship form fields",frontMatter:{id:"defining-relationship-form-fields",title:"Defining relationship form fields",sidebar_label:"Defining relationship form fields"},sidebar:"mainSidebar",previous:{title:"Creating complex forms",permalink:"/ngx-form-object/docs/next/guides/creating-complex-forms"},next:{title:"Saving forms",permalink:"/ngx-form-object/docs/next/guides/saving-forms"}},s=[{value:"Create relationship form fields using @BuildRelationshipFormObject decorator",id:"create-relationship-form-fields-using-buildrelationshipformobject-decorator",children:[]},{value:"Create form fields using BuildControl decorator",id:"create-form-fields-using-buildcontrol-decorator",children:[]}],f={toc:s};function m(e){var r=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,t.Z)({},f,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"When creating a form, there is a default behaviour for every type of form field relationship:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Attribute")," form field - ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormControl")," will be created"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BelongsTo")," form field - ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormControl")," will be created"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"HasMany")," form field - An empty ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormArray")," will be created")),(0,o.kt)("p",null,"For example, for ",(0,o.kt)("inlineCode",{parentName:"p"},"User")," model:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="user.model.ts"',title:'"user.model.ts"'},"import { Attribute, HasMany } from 'ngx-form-object';\n\nclass User {\n  @Attribute()\n  name: string;\n\n  @BelongsTo()\n  address: Address;\n\n  @HasMany()\n  cars: Array<Car>;\n}\n")),(0,o.kt)("p",null,"By default form will be created with:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"name")," form field as ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormControl")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"address")," form field as ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormControl")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cars")," form field as ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormArray")," containing one ",(0,o.kt)("inlineCode",{parentName:"li"},"ExtendedFormControl")," for every ",(0,o.kt)("inlineCode",{parentName:"li"},"Car")," model.")),(0,o.kt)("p",null,"If default form fields don't provide enough control (e.g. you are manipulating multiple levels of relationships on the same page/form), default behaviour can be overriden by implementing one of the following methods:"),(0,o.kt)("h3",{id:"create-relationship-form-fields-using-buildrelationshipformobject-decorator"},"Create relationship form fields using @BuildRelationshipFormObject decorator"),(0,o.kt)("p",null,"If defined, method decorated with ",(0,o.kt)("inlineCode",{parentName:"p"},"@BuildRelationshipFormObject")," decorator will be used when creating a form field for any model relationship decorated with ",(0,o.kt)("inlineCode",{parentName:"p"},"@BelongsTo")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"@HasMany")," decorators.\nThis method must return a ",(0,o.kt)("inlineCode",{parentName:"p"},"FormObject")," instance. ",(0,o.kt)("a",{parentName:"p",href:"/ngx-form-object/docs/next/guides/creating-complex-forms#creating-complex-relationship-structures"},"Find out more"),"."),(0,o.kt)("h3",{id:"create-form-fields-using-buildcontrol-decorator"},"Create form fields using BuildControl decorator"),(0,o.kt)("p",null,"If defined, method decorated with ",(0,o.kt)("inlineCode",{parentName:"p"},"BuildControl")," decorator will be used when building a form field for any model property or relationship decorated with ",(0,o.kt)("inlineCode",{parentName:"p"},"Attribute"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"BelongsTo")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"HasMany"),".\nThis method must return an instance of ",(0,o.kt)("inlineCode",{parentName:"p"},"ExtendedFormControl"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ExtendedFormArray")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"FormStore"),". It receives property value as its argument. ",(0,o.kt)("a",{parentName:"p",href:"/ngx-form-object/docs/next/guides/creating-complex-forms#creating-custom-relationship-forms"},"Find out more"),"."))}m.isMDXComponent=!0}}]);